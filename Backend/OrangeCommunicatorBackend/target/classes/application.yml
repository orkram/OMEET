# application configuration
server:
  port: 9000
  http: http://
  https: https://
  ip: 130.61.186.61
  url: ${server.http}${server.ip}
  #url: http://130.61.186.61
  #url: http://localhost

# keycloak configuration
keycloak:
  # name of the created realm
  #enabled: false
  realm: OrngAuth
  # name of the created client
  resource: admin-backend
  #resource: orange-backend
  # indicates that our service has been created as a bearer-only (by default it is false)
  bearer-only: true
  # url of our Keycloak server
  #auth-server-url: http://130.61.186.61:8100/auth
  auth-server-url: ${server.url}:8100/auth
  ssl-required: none
  #public-client: false
  credentials:
    secret: ba0a99ad-340f-48f4-9538-89db097a9546 #server
    #secret: 7cf7873c-298d-4bdd-976e-59258a52507e #localhost

spring:
  datasource:
    driverClassName: org.postgresql.Driver
    url: jdbc:postgresql://postgresqldb:5432/Omeet #server
    #url: jdbc:postgresql://localhost:5432/Omeet #localhost
    username: postgres
    password: postgres
  jpa:
    show-sql: true
    generate-ddl: true
    hibernate:
      #ddl-auto: update
      ddl-auto: create-drop
  #autoconfigure:
    #exclude:
      #- org.keycloak.adapters.springboot.KeycloakSpringBootConfiguration
  mail:
    host: smtp.gmail.com
    port: 587
    username: bp.qneds.test@gmail.com
    password: "mango swiersz sztorm"
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true

swagger:
  auth:
    token-url: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/token/
    auth-url: ${keycloak.auth-server-url}/realms/${keycloak.realm}/protocol/openid-connect/auth/
    client-id: orange-backend
    secret: 8377ed9c-abf2-43f8-a712-4c8a93a1b784 #server
    #secret: 9a612258-970b-4896-b368-58865914fefe #localhost

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG

auth:
  client: orange-app
  secret: 881f08d9-7da9-4654-a3b2-8987b7a17506 #server
  #secret: 3a9266bb-4ca5-4615-9f6d-934bd2a3afad #localhost

